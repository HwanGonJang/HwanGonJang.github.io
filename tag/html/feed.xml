<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="https://hwangonjang.github.io/tag/html/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://hwangonjang.github.io/" rel="alternate" type="text/html" />
  <updated>2021-08-14T20:16:18+09:00</updated>
  <id>https://hwangonjang.github.io/tag/html/feed.xml</id>

  
  
  

  
    <title type="html">Gon’s Portfolio | </title>
  

  
    <subtitle>장환곤의 포트폴리오</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Camp51.9 Kiosk Project (4)Google Spread Sheet 연동</title>
      <link href="https://hwangonjang.github.io/KioskProject04" rel="alternate" type="text/html" title="Camp51.9 Kiosk Project (4)Google Spread Sheet 연동" />
      <published>2021-02-25T01:40:00+09:00</published>
      <updated>2021-02-25T01:40:00+09:00</updated>
      <id>https://hwangonjang.github.io/KioskProject04</id>
      <content type="html" xml:base="https://hwangonjang.github.io/KioskProject04">&lt;h1 id=&quot;camp519-kiosk-project-4google-spread-sheet-연동&quot;&gt;Camp51.9 Kiosk Project (4)Google Spread Sheet 연동&lt;/h1&gt;

&lt;h2 id=&quot;camp519-kiosk-project&quot;&gt;Camp51.9 Kiosk Project&lt;/h2&gt;

&lt;p&gt;html, css, javascript를 처음 공부하는 동시에 영등포고등학교 메이커스페이스 Camp51.9의 시설 이용 키오스크를 직접 개발하는 프로젝트. &lt;strong&gt;2020/11/25 ~ 2020/02/15&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;

&lt;p&gt;어제는 구글의 firebase와 자바스크립트를 연동하여 상호작용 할 수 있는 시스템을 구축했습니다. 오늘 글에서는 더하여 깔끔하고 접근이 쉬운 구글 스프레드시트와 연동을 통해 이용자의 사용 정보를 정리하도록 하겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;시작&quot;&gt;시작&lt;/h2&gt;

&lt;p&gt;저번 글에서 연동한 파이어베이스는 조금 복잡하긴 하지만 원하는 기능은 모두 얻을 수 있었습니다. 그러나 파이어베이스의 단점은 데이터베이스를 깔끔하게 가져와서 정리하기가 힘들다는 것입니다. 파이어베이스의 정보를 엑셀과 같은 파일로 변환하여 정리하려면 조금 귀찮은 과정을 거쳐야 합니다. 우선 파이어베이스는 json 형식으로 밖에 자료를 가져올 수 없습니다. 따라서 다음과 같은 과정을 필요로 합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;파이어베이스 실시간 데이터베이스를 json으로 추출하기 -&amp;gt; 컨버터 사이트 혹은 프로그램으로 xml 파일로 컨버트하기.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이 정도로 끝난다면 감수하겠지만 제 방식대로 파이어베이스를 구성하고 정리한다면 key값이 너무 많아지고 데이터도 사람이 직접 읽기엔 깔끔하지 않습니다. 저희 메이커스페이스는 공용 기관으로 매월 이용객의 입장 시간과 체온을 제출해야 합니다. 따라서 파이어베이스만으로는 제출이 어렵고 기존에 사용하던 입장체크 html 또한 스프레드 시트를 활용하여 자동 문서 시스템을 구축한 바 있습니다.&lt;/p&gt;

&lt;p&gt;따라서 저도 구글 스프레드 시트를 만들고 자바스크립트와 연동하여 조금 더 가독성있는 문서를 만들 수 있도록 자동화하겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/33739448/109087646-32024d00-7751-11eb-9a07-2bc39799b315.png&quot; alt=&quot;campSheet&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;google-sheet&quot;&gt;Google Sheet&lt;/h3&gt;

&lt;p&gt;구글 시트, 구글 스프레드 시트는 구글에서 제공하는 서비스 중 하나로 마이크로소프트의 엑셀이나 파워포인트 기능을 별개의 설치 없이 지원합니다. 공유 기능과 더불어 사용하면 간단한 작업이나 팀 프로젝트에서 유용하게 사용할 수 있습니다. (출처: https://www.youtube.com/watch?v=39XZBKmcMfE)&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Google Sheet 문서 생성 및 스크립트 작성&lt;/p&gt;

    &lt;p&gt;구글에 로그인하고 스프레드 시트 문서를 하나 생성합니다. 원하는 이름을 작성하고 작성이 끝나면 도구-스크립트 편집기로 이동합니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/33739448/109087654-33cc1080-7751-11eb-88d0-71ef9206047d.png&quot; alt=&quot;campSheetScript&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;스크립트 작성 및 계정 인증&lt;/p&gt;

    &lt;p&gt;https://trickuweb.com/submit-custom-html-form-data-to-google-sheets.php 의 스크립트를 복사하여 스프레드 시트 스크립트에 붙여넣기 합니다. 그 후 계정을 인증하고 첫 번째 버전을 모두에게 공개로 실행합니다. 마지막으로 시트의 이름을 ‘시트1’에서 ‘Sheet1’로 바꿔줍니다. 이것 때문에 시간을 엄청 썼는데 이름을 한국어로 지정하면 연동이 되지 않습니다. 원문인 Sheet1으로 바꿔야 합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;자바스크립트 작성&lt;/p&gt;

    &lt;p&gt;웹 앱으로 공개할 때 스크립트 주소를 가져와 코드에 붙여넣습니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;주소의 이 스크립트 두 개를 붙여넣어줍니다. 이때 순서를 바꾸어 줍니다. 부트스트랩보다 jquery가 먼저 실행되어야 코드가 정상적으로 진행됩니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;구글 스프레드 시트에 입력하기&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;form method=&quot;post&quot; autocomplete=&quot;off&quot; name=&quot;google-sheet&quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;input type=&quot;text&quot; name=&quot;Temp&quot; id=&quot;googleTemp&quot; class=&quot;usertemp&quot; placeholder=&quot;체온을 입력하세요&quot;&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;html 부분입니다. html에서는 input태그를 통해 입력해야 스프레드 시트로 입력이 가능합니다(다른 것도 가능은 하겠지만 이 방법이 제일 간단하더라구요.).&lt;/p&gt;

    &lt;p&gt;form태그로 input부분을 감싸주고 method, name을 지정해줍니다. input 태그의 name은 스프레드 시트 1행에 있는 이름을 적어줍니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;signinButtonL.addEventListener('click', e =&amp;gt; {
   e.preventDefault()
   fetch(scriptURL, { method: 'POST', body: new FormData(form)})   
      
   .catch(error =&amp;gt; console.error('Error!', error.message))
  })
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;자바스크립트 부분입니다. click이라는 id를 가진 버튼을 누르면 실행되는 함수 입니다. 오류가 발생하면 에러 메세지를 띄워줍니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;결과&quot;&gt;결과&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/33739448/109087646-32024d00-7751-11eb-9a07-2bc39799b315.png&quot; alt=&quot;campSheet&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이것으로 구글 스프레드 시트와의 연동이 끝났습니다. 파이어베이스보다 훨씬 깔끔하고 제출용으로 전혀 문제 없을 것 같네요.&lt;/p&gt;

&lt;h2 id=&quot;마무리&quot;&gt;마무리&lt;/h2&gt;

&lt;p&gt;지금까지 4개의 글을 통해 전반적인 Camp51.9의 키오스크 프로젝트를 둘러봤습니다. 11월 말에 시작해서 마스크 감지 인공지능을 포함하여 약 2달 정도 시간을 쓴 것 같습니다. 다음 글에서는 파이썬과 텐서플로우를 활용하여 마스크 감지 인공지능을 실행하고 동작하는 원리에 대해서 이야기하도록 하겠습니다. 감사합니다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>HwanGonJang</name>
        
        
      </author>

      

      
        <category term="html" />
      

      
        <summary type="html">Camp51.9 Kiosk Project (4)Google Spread Sheet 연동</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Camp51.9 Kiosk Project (3)Google Firebase 연동</title>
      <link href="https://hwangonjang.github.io/KioskProject03-copy" rel="alternate" type="text/html" title="Camp51.9 Kiosk Project (3)Google Firebase 연동" />
      <published>2021-02-04T01:40:00+09:00</published>
      <updated>2021-02-04T01:40:00+09:00</updated>
      <id>https://hwangonjang.github.io/KioskProject03%20copy</id>
      <content type="html" xml:base="https://hwangonjang.github.io/KioskProject03-copy">&lt;h1 id=&quot;camp519-kiosk-project-3google-firebase-연동&quot;&gt;Camp51.9 Kiosk Project (3)Google Firebase 연동&lt;/h1&gt;

&lt;h2 id=&quot;camp519-kiosk-project&quot;&gt;Camp51.9 Kiosk Project&lt;/h2&gt;

&lt;p&gt;html, css, javascript를 처음 공부하는 동시에 영등포고등학교 메이커스페이스 Camp51.9의 시설 이용 키오스크를 직접 개발하는 프로젝트. &lt;strong&gt;2020/11/25 ~ 진행중&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;

&lt;p&gt;지금까지의 글에서는 html과 웹 어플리케이션의 모습을 보여드리고 간단히 설명하는 과정이었습니다. 그래서 오늘은 javascript에 대한 설명, Google 파이어베이스를 html에 연동하는 과정과 방법을 작성하도록 하겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;시작&quot;&gt;시작&lt;/h2&gt;

&lt;p&gt;파이어베이스 연동을 통해 사용자의 이용정보를 저장하고 이용시작과 종료에 따른 시설, 장비를 유동적으로 변경할 수 있도록 하겠습니다. 또, 파이어베이스의 입력 기능을 통해 특정 상황에서 매니저가 직접 정보를 변경 할 수 있는 기능을 기대할 수 있습니다.&lt;/p&gt;

&lt;p&gt;### Google Firebase&lt;/p&gt;

&lt;p&gt;파이어베이스(Firebase)는 구글에서 제공하는 모바일, 웹 어플리케이션 개발 플랫폼이자 실시간 데이터베이스입니다. 말그대로 실시간 데이터베이스이기 때문에 사용자가 정보를 입력할 때 마다 실시간으로 데이터베이스의 값이 바뀝니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Firebase 웹 어플리케이션 프로젝트 생성 및 연동 스크립트 가져오기&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/33739448/106968284-d82ee880-678b-11eb-96e8-1b686edd760d.png&quot; alt=&quot;CampKioskFirebaseProject&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;파이어베이스에서 웹 어플리케이션 용도로 프로젝트를 생성하고 프로젝트 설정 메뉴에서 html과 연동을 위한 firebase 스크립트를 가져옵니다. 이때 analytics 부분은 사용하지 않으므로 지워줍니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   &amp;lt;script&amp;gt;
           // Your web app's Firebase configuration
           // For Firebase JS SDK v7.20.0 and later, measurementId is optional
           var firebaseConfig = {
           apiKey: &quot;AIzaSyC5_G3RZhRjxLyh27AmjTNXX2ul1uMF9OI&quot;,
           authDomain: &quot;test-90278.firebaseapp.com&quot;,
           projectId: &quot;test-90278&quot;,
           storageBucket: &quot;test-90278.appspot.com&quot;,
           messagingSenderId: &quot;315329074324&quot;,
           appId: &quot;1:315329074324:web:3bfb0adda43868a8975081&quot;,
           measurementId: &quot;G-96ZE5HQBEJ&quot;
         };
         // Initialize Firebase
         firebase.initializeApp(firebaseConfig);
   &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;스크립트에는 연결을 위한 Apikey, 도메인, 프로젝트 ID등 고유 값들이 자동으로 작성되어있습니다. &amp;lt;body&amp;gt; 태그 및에 붙여넣기 해주기만 하면 끝입니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;입력하기 : set 명령과 push 명령 이해하기&lt;/p&gt;

    &lt;p&gt;먼저 파이어베이스 입력에 사용되는 명령에는 set과 push가 있습니다. 둘의 특징은 다음과 같습니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;set : 특정 위치에 입력값을 작성하나 다른 값을 가진 같은 요청을 받으면 기존의 값을 없애고 다시 입력합니다.&lt;/li&gt;
      &lt;li&gt;push : 기본적으로 set과 같은 명령이나 기존의 값을 초기화하지 않습니다. 하지만 매 처음 입력마다 랜덤의 고유 key값을 경로에 집어넣습니다.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;제가 만들고 있는 키오스크는 수많은 사용자들이 로그인하고 이용정보를 저장하기 때문에 push를 사용하는 것이 좋아보이지만 저는 set을 사용했습니다. 처음 개발할때는 push를 사용했으나 같은 위치에 계속해서 정보를 저장하는 대신 랜덤의 key값을 집어 넣기 때문에 나중에 값을 가져올때, 즉 출력 시에 경로를 지정할 수 없는 문제가 생겼습니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/33739448/106968286-d9f8ac00-678b-11eb-844a-fe13d610e278.png&quot; alt=&quot;CampKioskfirebase&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;그래서 저는 입력에서 set 명령을 사용했고 한 위치에 하나의 값만 저장하는 단점을 보완하기 위해 key값에 제가 참조하기 쉽도록 숫자를 더하여 간단한 규칙을 지정했습니다(ex. 아이디1 키는 아이디를, 아이디2 키는 이름을 저장하는 방식입니다. 이렇게 하면 조금 복잡해지지만 set에서 서로 다른 위치에 다른 값을 하나씩 저장할 수 있습니다.).  이용 정보와 사용하는 시설, 장비, 여석 등 또한 비슷하게 저장하였습니다.&lt;/p&gt;

    &lt;p&gt;이제 입력하기 위한 명령어를 알아보겠습니다. 입력에 사용하는 명령은 어렵지 않습니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var dbRefObject = firebase.database().ref('Login/'+userid + '/' + userid).set({&quot;ID&quot;: userid});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;변수를 하나 선언하고 파이어베이스에 저장할 경로와 이름, 값을 지정해주기만 하면 됩니다. 위의 경우 회원가입 페이지의 한 부분으로 userid 변수는 사용자가 입력한 아이디이고 그 입력한 아이디를 파이어베이스에 저장하는 코드입니다. 같은 방식으로 이름, 소속 등을 입력해줍니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;출력하기 : 임시저장소 활용&lt;/p&gt;

    &lt;p&gt;push와 set을 설명하면서 push를 사용하지 않은 이유가 여기에서 드러납니다.  push는 값을 저장하는 용도로는 깔끔하지만 랜덤의 key값을 지정하기 때문에 참조가 어렵습니다. 따라서 set을 사용하되 고유의 규칙을 가진 key 값을 지정해주었습니다. 하지만 이 방법에도 문제가 있었습니다. 그래서 잔머리를 굴렸습니다. 바로 C언어를 배울때 공부한 임시 저장소를 활용하는 것입니다. C에서 임시 저장소는 2개의 변수를 바꿔줄 때 사용합니다. 그래서 저는 파이어베이스에 따로 tmp라는 공간을 만들어 현재 사용하고 있는 이용자의 ‘ID’를 저장해주었습니다. 이렇게 하면 현재 사용자의 정보에 맞게 아이디를 가져와 위의 입력 규칙에 맞게 숫자를 더하는 방식으로 원하는 정보를 참조할 수 있습니다! 아래는 이런 방식으로 작성한 코드입니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var dbTestRef = firebase.database().ref('Login/' + userid + '/' + userid + 1 + '/')
   
     dbTestRef.on('child_added', function(data){
   
     document.getElementById(&quot;warning&quot;).innerHTML=&quot;확인완료&quot;;
   
     document.getElementById(&quot;write&quot;).innerHTML=data.val() + &quot; 님으로&amp;lt;br&amp;gt;이용하시겠습니까?&quot;;
   
     })
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;위 코드는 로그인 html의 한 부분입니다. 입력과 같이 변수를 생성하고 참조할 경로를 지정해주면 data.val() 이라는 변수로 파이어베이스의 값을 가져오게됩니다. 위는 이용자의 ID로 이용자의 이름을 가져오는 코드입니다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var dbTestRef = firebase.database().ref('tmp/')
     dbTestRef.on('child_added', function(data){
     var currentDay = 				         firebase.database().ref('CurrentUser/CurrentDay').set({&quot;currentDay&quot;: year + '/' + month + '/' + date});
     var currentTime = firebase.database().ref('CurrentUser/' + data.val() + '/' + data.val() + 'Time').set({&quot;currentTime&quot;: hours + ':' + minutes});
     var currentuser = firebase.database().ref('CurrentUser/' + data.val() + '/' + data.val() + 'TimeLobby').set({&quot;LobbyTime&quot;: lobbytimeH + &quot;시간&quot; + lobbytimeM + &quot;분&quot;});
        
     var dbTestRef1 = firebase.database().ref('Establishment/Lobby/')
     dbTestRef1.on('child_added', function(data){
     var LobbyUser = firebase.database().ref('Establishment/Lobby').set({&quot;Lobby&quot;: data.val()-1}); 
     })  
        
   })
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;위 코드는 tmp를 활용하여 원하는 값을 가져오는 코드입니다. 먼저 tmp의 ID를 가져옵니다. (currentDay, currentTime 변수는 이용자의 이용 날짜와 시간을 저장하는 입력 함수입니다.)  그 후 currentuser 변수에서 tmp에서 가져온 아이디를 경로에 넣어줌으로써 이용자만이 특정 날짜에 가지는 고유의 공간에 이용 시작 시간과 분이 입력되는 방식입니다. 같은 방법으로 두번째 dbTestRef1 변수는 Establishment/Lobby/ 위치에 있는 로비 좌석수를 가져와서 다시 로비에 -1 한 값을 저장하는 방식입니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이 방법으로 저는 파이어베이스를 연동하고 입력과 출력을 동시에 해결했습니다. 키오스크 용 웹 어플리케이션에 반드시 필요한 상호작용 데이터 베이스인 파이어베이스를 저도 처음 사용해봤지만 하나하나 공부하며 직접 만드는 과정이 매우 의미있었던 것 같습니다.&lt;/p&gt;

&lt;p&gt;다음 글에서는 Google Spread Sheet를 연동하는 과정을 다루겠습니다. 감사합니다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>HwanGonJang</name>
        
        
      </author>

      

      
        <category term="html" />
      

      
        <summary type="html">Camp51.9 Kiosk Project (3)Google Firebase 연동</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Camp51.9 Kiosk Project (2)체온 입력칸 추가</title>
      <link href="https://hwangonjang.github.io/KioskProject02" rel="alternate" type="text/html" title="Camp51.9 Kiosk Project (2)체온 입력칸 추가" />
      <published>2021-02-02T01:40:00+09:00</published>
      <updated>2021-02-02T01:40:00+09:00</updated>
      <id>https://hwangonjang.github.io/KioskProject02</id>
      <content type="html" xml:base="https://hwangonjang.github.io/KioskProject02">&lt;h1 id=&quot;camp519_kioskproject-2체온-입력칸-추가&quot;&gt;Camp51.9_KioskProject (2)체온 입력칸 추가&lt;/h1&gt;

&lt;p&gt;html, css, javascript를 처음 공부하는 동시에 영등포고등학교 메이커스페이스 Camp51.9의 시설 이용 키오스크를 직접 개발하는 프로젝트.  &lt;strong&gt;2020/11/25 ~ 진행중&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;

&lt;p&gt;저번 글에서 메이커 스페이스를 위한 출입 웹 어플리케이션을 설계하고 구축하는 작업을 했습니다. 그리고 전체적인 구상에서 자동으로 체온을 측정해주는 기능을 넣으려고 했었는데 만들어 놓고 보니 체온을 입력하는 칸을 만들지 않았습니다. 그래서 이번 글에서 체온 입력칸을 추가해 주도록 하겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;시작&quot;&gt;시작&lt;/h2&gt;

&lt;p&gt;체온 측정은 요즘 세상에 반드시 이루어지는 일이므로 로그인 창에서 입력할 수 있도록 만들 것입니다.&lt;/p&gt;

&lt;h3 id=&quot;로그인-화면-수정&quot;&gt;로그인 화면 수정&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;기존 로그인 화면에서 체온 입력칸을 추가한 화면입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/33739448/106684200-5d3dc480-6609-11eb-8f00-4d937ca4f3ee.png&quot; alt=&quot;loginCamp2&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;소스코드&quot;&gt;소스코드&lt;/h3&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbTestRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Login/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;dbTestRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'child_added'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;write&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; 님으로&amp;lt;br&amp;gt;로그인하시겠습니까?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tmp/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tmpName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbTestRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tmp/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;dbTestRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'child_added'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
              &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbTestRef1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Login/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
              &lt;span class=&quot;nx&quot;&gt;dbTestRef1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'child_added'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbTestRef2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Establishment/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;dbTestRef2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'child_added'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;                      
                    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbTestRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tmp/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;dbTestRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'child_added'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbTestRef3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Login/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                      &lt;span class=&quot;nx&quot;&gt;dbTestRef3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'child_added'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
                      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LobbyUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Establishment/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;null&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
                      &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
                      &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;자바스크립트에서 파이어베이스에 로그인 정보를 입력하는 코드입니다. 파이어베이스와 엑셀 연동 설명 글에서 자세히 설명하겠지만 간단히 보자면&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;dbTestRef1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'child_added'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 부분에서 .on() 함수를 통해 data 값을 파이어베이스의 특정위치에서 가져오고,  .set 명령을 통해 특정 위치에 원하는 제목과 값을 적어 넣는 방식입니다. javascript와 함께 연동하는 방법에 대해선 다음 글에서 설명하겠습니다.&lt;/p&gt;

&lt;h3 id=&quot;google-스프레드시트&quot;&gt;Google 스프레드시트&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/33739448/106684221-6595ff80-6609-11eb-9596-70444c80a331.png&quot; alt=&quot;loginCampSheet&quot; /&gt;&lt;/p&gt;

&lt;p&gt;스프레드시트와 연동함으로써 파이어베이스와는 별개로 사용자들의 이용 정보를 깔끔하게 정리하여 월단위로 제출할 수 있도록 했습니다.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>HwanGonJang</name>
        
        
      </author>

      

      
        <category term="html" />
      

      
        <summary type="html">Camp51.9_KioskProject (2)체온 입력칸 추가</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Camp51.9 Kiosk Project (1)시작 그리고 Web Application 웹 앱</title>
      <link href="https://hwangonjang.github.io/KioskProject-start" rel="alternate" type="text/html" title="Camp51.9 Kiosk Project (1)시작 그리고 Web Application 웹 앱" />
      <published>2021-02-01T01:40:00+09:00</published>
      <updated>2021-02-01T01:40:00+09:00</updated>
      <id>https://hwangonjang.github.io/KioskProject-start</id>
      <content type="html" xml:base="https://hwangonjang.github.io/KioskProject-start">&lt;h1 id=&quot;camp519_kioskproject&quot;&gt;Camp51.9_KioskProject&lt;/h1&gt;

&lt;p&gt;html, css, javascript를 처음 공부하는 동시에 영등포고등학교 메이커스페이스 Camp51.9의 시설 이용 키오스크를 직접 개발하는 프로젝트.  &lt;strong&gt;2020/11/25 ~ 진행중&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;

&lt;p&gt;html 공부를 시작하기로 했습니다. 지금 목표로 삼고있는 방향은 html 같은 디자인이나 프론트엔드 개발쪽은 아니지만 IT, 인터넷 환경에서 가장 기본이 되는 부분이기에 적어도 숙지는 하고 있어야 한다고 생각했습니다. 물론 지루하게 책만 보면서 공부할 생각은 아닙니다. 고등학교에서 배운 것들 중에 하나가 처음 공부하는 부분에서는 우선 개발부터 시작하면서 익숙해지는 것이 가장 효율적이면서 재미도 찾을 수 있는 방법이라는 것을 알고 있으니까요ㅎㅎ&lt;/p&gt;

&lt;p&gt;그런의미에서 제가 일하고 있는 모교 영등포고등학교의 메이커 스페이스 Camp51.9의 시설 이용을 위한 키오스크 웹 어플리케이션을 개발하기로 했습니다. 물론 코로나 바이러스로 출입과 이용 시간을 기록하는 것이 필수가 되었기에 출입 시간을 기록할 수 있도록 개발할 것입니다. 이를통해 단순하게 이름과 출입시간만 기록할 수 있었던 기존에 사용하던 웹 앱에서 사용자, 이용하는 시설 혹은 행사의 종류, 이용 시간과 퇴장 시간까지 모두 기록 할수 있도록 하겠습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;공부와 경험을 동시에! 일석이조라는 말을 여기에서 쓰는 것이겠죠?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;시작&quot;&gt;시작&lt;/h2&gt;

&lt;p&gt;매니저의 입장에서 본 저희 캠프의 이용 순서는 이렇습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;체온 측정을 안내해주고 측정을 해드린 후 수기 작성을 받습니다.&lt;/li&gt;
  &lt;li&gt;이를 확인한 후 위에서 이야기한 기존의 웹 앱 시스템에 이름과 인원 소속을 입력할 수 있도록 안내합니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;체온 측정과 수기 작성 웹 앱에 이용시간 등록이 모두 나뉘어져 있어서 불편한점이 많고 제가 가끔 입장하시는 분들을 확인하지 못하는 때에는 위의 모든것을 작성하지 못할 때도 많습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그래서 프로젝트에 조금 더 추가하기로 했습니다. 바로 체온 측정까지 자동화 하도록 하는 것이죠! 최근에 공부하고 있는 tensorflow를 활용하여 마스크 감지 인공지능을 만들고 아두이노로 체온 측정기를 만들어 연동하면 여러 건물에서 흔히 볼 수 있는 체온 측정기를 사용료 없이 멋지게 만들 수 있을 것 같습니다. (완성 후엔 또 html과 연동하는 겁니다!)&lt;/p&gt;

&lt;p&gt;전체적인 틀을 잡았으니 이제 세부적인 요소와 툴들을 정하도록 하겠습니다. 시작할때는 이 분야에 완전히 지식이 없어서 주현쌤(은사님이자 캠프운영자십니다!)에게 여쭈어봤고, 또 제가 공부하고 싶은 부분들을 고려하여 툴과 개발방향을 정했습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HTML, CSS, JavaScript
    &lt;ul&gt;
      &lt;li&gt;기본적인 웹 앱 개발 툴&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Firebase&lt;/li&gt;
  &lt;li&gt;Google에서 제공하는 실시간 데이터베이스 서비스를  자바스크립트와 연동하여 출입시간과 사용자 이용정보를 저장하고 입출력 할 것입니다.&lt;/li&gt;
  &lt;li&gt;Google Sheet
    &lt;ul&gt;
      &lt;li&gt;Google 스프레드시트를 자바스크립트와 연동하여 활용하여 주현 쌤 결재에 사용할 수 있도록 사용자 정보와 출입시간을 깔끔하게 정리할 것입니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Arduino
    &lt;ul&gt;
      &lt;li&gt;적외선 체온 센서를 활용하여 사용자들이 쉽게 체온을 측정할 수 있도록 자동화 할 것입니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Python
    &lt;ul&gt;
      &lt;li&gt;tensorflow를 활용하여 마스크 감지 인공지능을 함께 설치해 줄 것입니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;이제 개발 방향과 툴도 정했으니 개발을 시작해보도록 합시다! (사실 개발이라는 가면을 쓴 공부지만..)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;ps. 사실 티스토리를 시작한 날짜는 2021/01/04이고 제가 공부를 시작한 날짜는 2020/11/25 이기에 어느정도 개발이 진행되어 있는 상태입니다. 따라서 이 글은 현재 개발 상태에서 부터 앞으로의 과정을 설명하도록 하겠습니다.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;웹-어플리케이션-부분&quot;&gt;웹 어플리케이션 부분&lt;/h2&gt;

&lt;p&gt;이번 개발의 목적인 html 부분입니다. 우선 어떤 식으로 개발할지 설계했습니다. Camp51.9에서 필요한 기능은 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;로그인 화면(default)&lt;/li&gt;
  &lt;li&gt;회원가입 화면&lt;/li&gt;
  &lt;li&gt;이용 종류 선택 화면&lt;/li&gt;
  &lt;li&gt;시설 선택 화면&lt;/li&gt;
  &lt;li&gt;장비 선택 화면(외부인 이용 페이지)&lt;/li&gt;
  &lt;li&gt;행사 선택 화면&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;기타 이용사유 화면&lt;/p&gt;

    &lt;p&gt;로그인 창을 기준으로 서로 연결되도록 만들 생각입니다. (사실 만들었습니다.)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;로그인-화면&quot;&gt;로그인 화면&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;로그인 화면입니다. 로그인, 퇴장, 회원가입으로 이어지는 기본 화면으로 꾸몄습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/33739448/106545325-8e0bf400-654c-11eb-8fb8-b9bb9d172cb6.png&quot; alt=&quot;loginCamp&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;로그인 페이지에서 아이디를 입력하고 Login 버튼을 누르면 확인 팝업이 실행되고 시설 종류 선택 화면으로 이어집니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/33739448/106545351-99f7b600-654c-11eb-9855-7e5b6571b12e.png&quot; alt=&quot;loginCampPop&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;회원가입-화면&quot;&gt;회원가입 화면&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;회원 가입 페이지입니다. 처음 이용하는 고객은 회원가입을 한 후에 이용가능합니다.
    &lt;ul&gt;
      &lt;li&gt;고객 정보는 자동으로 파이어베이스에 저장되어 입출력이 가능합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/33739448/106545359-9d8b3d00-654c-11eb-992b-793312a4c8e9.png&quot; alt=&quot;signupCamp&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;이용-종류-선택-화면&quot;&gt;이용 종류 선택 화면&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;이용 종류 선택 화면입니다. 사용 사유에 맞게 선택합니다.
    &lt;ul&gt;
      &lt;li&gt;로그인 정보에 따라 현재 사용중인 유저의 이름이 출력됩니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/33739448/106545382-a845d200-654c-11eb-973c-d5923b70aeed.png&quot; alt=&quot;reservationCamp&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;시설-이용-화면&quot;&gt;시설 이용 화면&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;시설 이용 화면입니다. 원하는 시설을 선택하고 이용하기 버튼을 누릅니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/33739448/106545405-b3006700-654c-11eb-96ed-8287ac801a43.png&quot; alt=&quot;establishment&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;잔여 좌석은 파이어베이스에서 자동으로 연산되어 출력됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/33739448/106545422-b693ee00-654c-11eb-9494-bb7e943febb8.png&quot; alt=&quot;establishmentPop&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;잔여 좌석이 없을 경우 이용 불가합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/33739448/106545451-bf84bf80-654c-11eb-8dfc-2c961cada711.png&quot; alt=&quot;deny&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;외부인-이용-화면&quot;&gt;외부인 이용 화면&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;외부인 이용 페이지에서는 유료 장비를 사용할 수 있습니다. (영등포고 학생은 무료여서 따로 배치했습니다.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/33739448/106545474-c7dcfa80-654c-11eb-9c54-b85268c20e0f.png&quot; alt=&quot;campEquipment&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;행사-화면&quot;&gt;행사 화면&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;행사 페이지입니다. 현재 코로나 바이러스로 진행중인 행사가 없어 경고 팝업이 생성됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/33739448/106545495-d0cdcc00-654c-11eb-8950-c5173498c18c.png&quot; alt=&quot;campEvent&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;기타-화면&quot;&gt;기타 화면&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;기타 다른 사유가 있을 때는 기타 사용 팝업이 올라옵니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/33739448/106545503-d4f9e980-654c-11eb-8c38-746967bcb188.png&quot; alt=&quot;campEtc&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이렇게 기본적인 html의 화면 틀은 잡혔습니다. html 소스코드는 제 github에서 확인하실 수 있습니다.&lt;/p&gt;

&lt;p&gt;이제 파이어베이스와 구글 시트에 연동한 모습과 방법을 보겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;firebase--google-sheet&quot;&gt;Firebase &amp;amp; Google Sheet&lt;/h2&gt;

&lt;p&gt;추후 작성 에정.&lt;/p&gt;

&lt;p&gt;앞으로 꾸준히 올리도록 하겠습니다. 감사합니다!&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>HwanGonJang</name>
        
        
      </author>

      

      
        <category term="html" />
      

      
        <summary type="html">Camp51.9_KioskProject</summary>
      

      
      
    </entry>
  
</feed>
