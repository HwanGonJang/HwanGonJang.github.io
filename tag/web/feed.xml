<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="https://hwangonjang.github.io/tag/web/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://hwangonjang.github.io/" rel="alternate" type="text/html" />
  <updated>2021-11-28T01:51:53+09:00</updated>
  <id>https://hwangonjang.github.io/tag/web/feed.xml</id>

  
  
  

  
    <title type="html">Gon’s Portfolio | </title>
  

  
    <subtitle>장환곤의 포트폴리오 사이트</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Camp51.9 Kiosk Project (5)8개월 간의 수정과 배포</title>
      <link href="https://hwangonjang.github.io/KioskProject_Final" rel="alternate" type="text/html" title="Camp51.9 Kiosk Project (5)8개월 간의 수정과 배포" />
      <published>2021-08-31T01:40:00+09:00</published>
      <updated>2021-08-31T01:40:00+09:00</updated>
      <id>https://hwangonjang.github.io/KioskProject_Final</id>
      <content type="html" xml:base="https://hwangonjang.github.io/KioskProject_Final">&lt;h1 id=&quot;camp519_kioskproject_final&quot;&gt;Camp51.9_KioskProject_Final&lt;/h1&gt;

&lt;p&gt;html, css, javascript를 처음 공부하는 동시에 영등포고등학교 메이커스페이스 Camp51.9의 시설 이용 키오스크를 직접 개발하는 프로젝트.&lt;/p&gt;

&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;
&lt;p&gt;2020년 겨울방학 부터 2021년 여름방학 까지 약 8개월 동안 메이커스페이스를 위한 출입등록 키오스크를 개발하고 실제로 이용하고 피드백을 받아 수정하는 작업을 거쳤습니다. 처음 html을 만지고 개발할때를 생각하면 지금 너무나 큰 발전을 한 것 같아 뿌듯하기도 합니다. 이번 글에서는 마지막으로 키오스크를 설치하고 어떻게 수정하고 어떤 기능을 추가했는지에 대해 정리하겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;개발-과정&quot;&gt;개발 과정&lt;/h2&gt;

&lt;p&gt;키오스크를 실제로 설치하고 운영하면서 정말 많은 사용자들이 이용했습니다. 그 과정에서 여러가지 피드백이 있었고 보완할점을 수정하고 기능을 추가하면서 더 완벽한 개발로 이어질 수 있도록 하였습니다.&lt;/p&gt;

&lt;h3 id=&quot;비회원-로그인-여러명-로그인-추가&quot;&gt;비회원 로그인, 여러명 로그인 추가&lt;/h3&gt;

&lt;p&gt;새로 오시는 분들이 회원가입을 하는 것을 꺼려 하실 수 있어 비회원 로그인으로 최소한의 정보만 가져오는 방식을 추가하였고 여러명 방문시 대표자 1인만 등록할 수 있도록 기능을 추가하였습니다. 여러명 방문시 대표 외의 인원은 인원수만 적을 수 있도록 했습니다. 따라서 인원수에 대한 정보도 스프레드 시트에 추가하였습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h5_2.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h5_7.png?raw=true&quot; /&gt;
&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h5_8.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;웹-배포&quot;&gt;웹 배포&lt;/h3&gt;

&lt;p&gt;계속해서 웹을 수정해야했기 때문에 키오스크에 계속 번거롭게 파일을 바꿔야했습니다. 따라서 서버를 통해 웹을 배포하는 방법을 생각했으나 웹 하나를 유료 서버로 이용하기에는 비용 부담이 있었습니다. 그래서 생각한 방법으로 Netlify 라는 웹 어플리케이션 호스팅 서비스를 이용하는 것이었습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h5_3.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 서비스를 활용하여 웹을 수정하면 바로 올려서 배포하여 번거로움이 줄었고 누구나 볼 수 있다는 장점이 생겼습니다.&lt;/p&gt;

&lt;h3 id=&quot;메이커스페이스를-더-잘-보여주기-위한-thinglink-활용&quot;&gt;메이커스페이스를 더 잘 보여주기 위한 Thinglink 활용&lt;/h3&gt;

&lt;p&gt;메이커스페이스를 이용하는 사람들은 모두 출입등록 키오스크를 이용합니다. 따라서 이 키오스크에 메이커스페이스의 모습을 담아 여러가지 시설, 장비, 행사 등을 확인 할 수 있도록 만드는 기능을 추가했습니다. Thinglink라는 서비스를 활용하여 공간 사진들을 올려 한 눈에 확인 할 수 있도록 하였습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h5_6.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;이용한-시설-정보-시트에-추가&quot;&gt;이용한 시설 정보 시트에 추가&lt;/h3&gt;

&lt;p&gt;이용자가 어떤 시설과 장비를 이용했는지 알 수 있도록 이 정보를 스프레드 시트에 추가하였습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h5_2.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;외부인-이용-정보금액-시트-생성&quot;&gt;외부인 이용 정보(금액) 시트 생성&lt;/h3&gt;

&lt;p&gt;메이커스페이스의 장비와 시설은 학생은 무료지만 외부인의 경우 유료로 이용할 수 있습니다. 원래는 외부인 이용 금액과 장비를 수기로 작성했지만 이제 출입등록시 장비 선택에서 사용목적을 입력할 수 있도록 하였고 이 정보를 따로 외부인 이용 스프레드 시트에 저장하였습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h5_4.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h5_5.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;결과&quot;&gt;결과&lt;/h2&gt;

&lt;p&gt;이렇게 아무것도 모르는 상태에서 웹을 개발하고 실제로 운영하는 단계까지 오게 되었습니다. 시트에 나와있듯이 많은 사람들이 이용해주고 계십니다. 피드백을 받아 더 나은 키오스크를 만드는 과정이 굉장히 값진 경험이었고 작년의 저와는 또 다른 지금이 된 것 같습니다. Camp51.9 메이커스페이스의 키오스크 프로젝트 글은 이것으로 끝내겠습니다. 감사합니다!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h5_9.jpg?raw=true&quot; /&gt; 
&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h5_1.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Camp51.9 메이커스페이스 홈페이지
 &lt;a href=&quot;https://www.makeall.com/reservation/info.php?space_no=1677&amp;amp;area=&amp;amp;tsort=4&amp;amp;msort=&quot;&gt;홈페이지&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;배포한 키오스크 웹 앱
 &lt;a href=&quot;https://thirsty-golick-bbe10d.netlify.app/index.html&quot;&gt;웹&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;키오스크 프로젝트 깃허브&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/HwanGonJang/Camp51.9_KioskProject&quot;&gt;깃허브&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>HwanGonJang</name>
        
        
      </author>

      

      
        <category term="web" />
      

      
        <summary type="html">Camp51.9_KioskProject_Final</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">MOA React SNS 웹 만들기(SG해커톤)</title>
      <link href="https://hwangonjang.github.io/moa" rel="alternate" type="text/html" title="MOA React SNS 웹 만들기(SG해커톤)" />
      <published>2021-08-02T01:40:00+09:00</published>
      <updated>2021-08-02T01:40:00+09:00</updated>
      <id>https://hwangonjang.github.io/moa</id>
      <content type="html" xml:base="https://hwangonjang.github.io/moa">&lt;h1 id=&quot;moa-react-sns-웹-만들기sg해커톤&quot;&gt;MOA React SNS 웹 만들기(SG해커톤)&lt;/h1&gt;
&lt;p&gt;숭실대학교 소프트웨어학부와 글로벌미디어학부에서 주관하는 2박 3일 해커톤 행사에서 진행한 프로젝트 &lt;strong&gt;2021/7/29~2021/7/31&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;
&lt;p&gt;숭실대학교 소프트웨어학부, 글로벌미디어학부에서 코로나 바이러스를 주제로 진행한 해커톤의 프로젝트입니다. 저희는 MOA라는 이름의 SNS 웹을 만들었습니다. 코로나 바이러스에 지친 사람들이 취마활동이나 여행, 게임 등을 공유할 수 있도록 게시글을 생성하여 인스타그램 처럼 서로 소통할 수 있는 앱을 목적으로 제작했습니다.&lt;/p&gt;

&lt;h2 id=&quot;개발과정&quot;&gt;개발과정&lt;/h2&gt;
&lt;p&gt;해커톤은 3~4인의 조를 꾸려서 진행되었습니다. 저희 조는 3명의 개발자와 1명의 디자이너로 구성되었고 저는 프론트엔드의 피드 작성부분을 맡게되었습니다. 리액트로 개발한 웹이지만 저희는 컴퓨터보다 스마트폰에서의 사용이 많을 것이라고 생각하여 스마트폰 크기를 기준으로 제작하였습니다. 이 글에서는 제가 맡은 부분인 피드 작성 부분과 설정 페이지를 기준으로 작성합니다.&lt;/p&gt;

&lt;h4 id=&quot;기술&quot;&gt;기술&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;React&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;피드-작성-페이지&quot;&gt;피드 작성 페이지&lt;/h3&gt;
&lt;p&gt;피드 작성 부는 다음과 같습니다. 디자이너 분이 디자인 해주신대로 개발하여 멋진 외관을 만들 수 있었습니다.&lt;/p&gt;

&lt;p&gt;피드 작성 페이지에서 필요한 기능은 다음과 같습니다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;사진 선택 기능&lt;/li&gt;
  &lt;li&gt;글쓰기 기능&lt;/li&gt;
  &lt;li&gt;글 정렬 변경 기능&lt;/li&gt;
  &lt;li&gt;태그 선택 기능(글 별로 태그를 설정해 원하는 글 들을 모아 볼 수 있습니다.)&lt;/li&gt;
  &lt;li&gt;글 업로드 기능&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;리액트는 기본적으로 Node.js의 모듈과 자바스크립트를 이용해 웹을 구성합니다. 모듈로는 선배님이 알려주신 https://ant.design/ 의 모듈을 가져와 사용했습니다. 다양하고 예쁜 기능들이 많아서 좋은 사이트입니다.&lt;/p&gt;

&lt;p&gt;사진 선택과 글쓰기 기능은 위 사이트에서 쉽게 가져올 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imgValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)?(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imgValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)?&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 
&lt;span class=&quot;nx&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imgChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TextAlign&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/img&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imgValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)?&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;justifyContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;center&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;textAlign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;center&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fontSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;30px&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}):&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;imgValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)?({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;justifyContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;flex-start&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;textAlign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;left&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fontSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;30px&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}):&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;justifyContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;flex-end&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;textAlign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;right&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;fontSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;30px&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;리액트에서는 특히 삼항연산자를 많이 활용합니다.  위 두 코드는 정렬 아이콘을 클릭하면 아이콘의 사진이 정렬위치대로 바뀌고, 글의 css를 바꿔 정렬위치대로 적용하는 코드입니다. 삼항 연산자를 활용하여 imgValue를 각 정렬 아이콘마다 설정하고 이 변수의 값을 이용해서 글의 css를 바꾸는 방식입니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Rodal&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;customStyles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;customStyles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;visible&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;visible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onClose&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;categoriesList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;categoryNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/h1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;categoriesList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;categoryNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CheckableTag&lt;/span&gt;
                  &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                  &lt;span class=&quot;nx&quot;&gt;checked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;categoryNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; 
                  &lt;span class=&quot;nx&quot;&gt;onChange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;checked&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handleChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;checked&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
                  &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/CheckableTag&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;              &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})}&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Rodal&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 코드는 태그 선택 부분입니다. 눌러서 선택하세요 버튼을 누르면 팝업 모듈인 Rodal로 팝업이 띄워지고 map함수로 태그들이 생성됩니다(태그는 antd의 모듈입니다). 이렇게 하면 선택한 태그들을 모아놓은 배열에서 가져와 선택한 태그들이 보여지게 됩니다.&lt;/p&gt;

&lt;p&gt;사진과 글, 태그를 설정하고나면 게시하기 버튼을 눌러서 선배님(팀원)이 작업하신 DB로 정보가 보내집니다. 이 DB에서 서버가 정보를 가져와 웹으로 다시 보내는 형식입니다.&lt;/p&gt;

&lt;h3 id=&quot;설정-페이지&quot;&gt;설정 페이지&lt;/h3&gt;
&lt;p&gt;다음은 설정 페이지 입니다. 설정 페이지는 시간이 없어 css 작업만 했습니다.&lt;/p&gt;

&lt;h2 id=&quot;결과&quot;&gt;결과&lt;/h2&gt;
&lt;p&gt;해커톤에 참여하여 이렇게 멋진 작품을 만들었습니다. 동기들과 이런식으로 제대로 협업하여 결과물을 만들어내는 것이 처음이여서 걱정됐지만 이 과정에서 정말 많은 것을 느낀 것 같습니다. 특히 조장이신 4학년 선배님이 처음 접해보는 협업툴과 백엔드 프로그래밍을 알려주셔서 정말 많이 배웠고 앞으로의 공부에 큰 도움이 될 것 같습니다. 다음은 만들어진 MOA 서비스의 모습입니다.&lt;/p&gt;

&lt;h3 id=&quot;로그인-페이지&quot;&gt;로그인 페이지&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/m.jpg?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;회원가입-페이지&quot;&gt;회원가입 페이지&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/m_2.jpg?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;피드-페이지&quot;&gt;피드 페이지&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/m_3.jpg?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;태그-선택&quot;&gt;태그 선택&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/m_4.jpg?raw=true&quot; /&gt;
&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/m_5.jpg?raw=true&quot; /&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/m_6.jpg?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;태그-선택한-모습&quot;&gt;태그 선택한 모습&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/m_11.jpg?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;피드-작성-페이지-1&quot;&gt;피드 작성 페이지&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/m_10.jpg?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;글-정렬&quot;&gt;글 정렬&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/m_8.jpg?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;태그-선택-1&quot;&gt;태그 선택&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/m_9.jpg?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;마이페이지&quot;&gt;마이페이지&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/m_12.jpg?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;자기소개-수정&quot;&gt;자기소개 수정&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/m_13.jpg?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;설정-페이지-1&quot;&gt;설정 페이지&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/m_14.jpg?raw=true&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/TeamMOA/MOA&quot;&gt;깃허브&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>HwanGonJang</name>
        
        
      </author>

      

      
        <category term="web" />
      

      
        <summary type="html">MOA React SNS 웹 만들기(SG해커톤) 숭실대학교 소프트웨어학부와 글로벌미디어학부에서 주관하는 2박 3일 해커톤 행사에서 진행한 프로젝트 2021/7/29~2021/7/31</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Camp51.9 Kiosk Project (4)Google Spread Sheet 연동</title>
      <link href="https://hwangonjang.github.io/KioskProject04" rel="alternate" type="text/html" title="Camp51.9 Kiosk Project (4)Google Spread Sheet 연동" />
      <published>2021-02-25T01:40:00+09:00</published>
      <updated>2021-02-25T01:40:00+09:00</updated>
      <id>https://hwangonjang.github.io/KioskProject04</id>
      <content type="html" xml:base="https://hwangonjang.github.io/KioskProject04">&lt;h1 id=&quot;camp519-kiosk-project-4google-spread-sheet-연동&quot;&gt;Camp51.9 Kiosk Project (4)Google Spread Sheet 연동&lt;/h1&gt;

&lt;h2 id=&quot;camp519-kiosk-project&quot;&gt;Camp51.9 Kiosk Project&lt;/h2&gt;

&lt;p&gt;html, css, javascript를 처음 공부하는 동시에 영등포고등학교 메이커스페이스 Camp51.9의 시설 이용 키오스크를 직접 개발하는 프로젝트&lt;/p&gt;

&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;

&lt;p&gt;제가 웹을 공부하면서 키오스크를 개발하는 이유는 실력향상의 목적도 있지만 제가 일하고 있는 곳의 환경 때문이었습니다. 제가 일하고 있는 메이커스페이스 Camp51.9는 이용 고객 및 학생들이 출입 명부를 작성해야 합니다. 운영하고 있는 영등포고등학교에 기안을 올려야 하기 때문입니다. 여기에 더하여 코로나 바이러스로 인한 체온 측정이 추가로 요구되었습니다. 이를 매니저가 일일히 안내하고 도와드리는데에는 한계가 있었고 자연스레 키오스크, 웹 개발로 이어지게 되었습니다. 출입등록 키오스크인 만큼 웹에서 끝나는 것이 아닌 사용자의 출입 및 체온 정보가 따로 저장이 되어야 합니다. 따라서 저는 웹과 연동할 수 있는 방법으로 구글의 스프레드 시트를 활용했습니다.&lt;/p&gt;

&lt;h2 id=&quot;시작&quot;&gt;시작&lt;/h2&gt;

&lt;p&gt;저번 글에서 연동한 파이어베이스는 조금 복잡하긴 하지만 원하는 기능은 모두 얻을 수 있었습니다. 그러나 파이어베이스의 단점은 데이터베이스를 깔끔하게 가져와서 정리하기가 힘들다는 것입니다. 파이어베이스의 정보를 엑셀과 같은 파일로 변환하여 정리하려면 조금 귀찮은 과정을 거쳐야 합니다. 파이어베이스는 json 형식으로 밖에 자료를 가져올 수 없습니다. 따라서 다음과 같은 과정을 필요로 합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;파이어베이스 실시간 데이터베이스를 json으로 추출하기 -&amp;gt; 컨버터 사이트 혹은 프로그램으로 xml 파일로 컨버트하기.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이 정도로 끝난다면 감수하겠지만 제 방식대로 파이어베이스를 구성하고 정리한다면 key값이 너무 많아지고 데이터도 사람이 직접 읽기엔 깔끔하지 않습니다. 저희 메이커스페이스는 공용 기관으로 매월 이용객의 입장 시간과 체온을 제출해야 합니다. 따라서 파이어베이스만으로는 제출이 어렵습니다.&lt;/p&gt;

&lt;p&gt;따라서 저는 구글 스프레드 시트를 만들고 자바스크립트와 연동하여 조금 더 가독성있는 문서를 만들 수 있도록 자동화하겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;개발과정&quot;&gt;개발과정&lt;/h2&gt;

&lt;h3 id=&quot;google-sheet&quot;&gt;Google Sheet&lt;/h3&gt;

&lt;p&gt;구글 시트, 구글 스프레드 시트는 구글에서 제공하는 서비스 중 하나로 마이크로소프트의 엑셀이나 파워포인트 기능을 별개의 설치 없이 지원합니다. 공유 기능과 더불어 사용하면 간단한 작업이나 팀 프로젝트에서 유용하게 사용할 수 있습니다. 다음은 시트를 자바스크립트와 연동하는 과정입니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Google Sheet 문서 생성 및 스크립트 작성&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;구글에 로그인하고 스프레드 시트 문서를 하나 생성합니다. 원하는 이름을 작성하고 작성이 끝나면 도구-스크립트 편집기로 이동합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h4_2.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;스크립트 작성 및 계정 인증&lt;/p&gt;

    &lt;p&gt;https://trickuweb.com/submit-custom-html-form-data-to-google-sheets.php 의 스크립트를 복사하여 스프레드 시트 스크립트에 붙여넣기 합니다. 그 후 게시를 눌러 웹앱으로 배포를 해줍니다. 계정을 인증하고 첫 번째 버전을 모두에게 공개로 실행합니다. 마지막으로 시트의 이름을 ‘시트1’에서 ‘Sheet1’로 바꿔줍니다. 이름을 한국어로 지정하면 연동이 되지 않습니다. 원문인 Sheet1으로 바꿔야 합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;자바스크립트 작성&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;주소의 이 스크립트 두 개를 붙여넣어줍니다. 스프레드시트 연동을 위해 쉽게 이용할 수 있는 스크립트입니다. 만약 실행되지 않으면 순서를 바꾸어 줍니다. 부트스트랩보다 jQuery가 먼저 실행되어야 코드가 정상적으로 진행됩니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;부트스트랩: 웹사이트를 쉽게 만들 수 있게 도와주는 HTML, CSS, JS 프레임워크.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;jQuery: HTML의 클라이언트 사이드 조작을 단순화 하도록 설계된 크로스 플랫폼의 자바스크립트 라이브러리.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;구글 스프레드 시트에 입력하기&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autocomplete=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;off&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;google-sheet&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;br&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Temp&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;googleTemp&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;usertemp&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;체온을 입력하세요&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;html 부분입니다. html에서는 input태그를 통해 입력해야 스프레드 시트로 입력이 가능합니다. form태그로 input부분을 감싸주고 method, name을 지정해줍니다. input 태그의 name은 스프레드 시트 1행에 있는 이름을 적어줍니다.&lt;/p&gt;

&lt;p&gt;이제 다시 웹 앱으로 공개할 때 스크립트 주소를 가져와 자바스크립트 코드에 붙여넣습니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scriptURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'https://script.google.com/macros/s/AKfycbzD_6ZgEBY12fZIeW9gq0BEAfA_-R9ba6XFP36N_-FR71VDwAVjpMAB/exec'&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'google-sheet'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;signinButtonL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'click'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scriptURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'POST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FormData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)})&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Error!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;click이라는 id를 가진 버튼을 누르면 연동된 시트로 POST하는 함수가 실행됩니다.. 오류가 발생하면 에러 메세지를 띄워줍니다.&lt;/p&gt;

&lt;h2 id=&quot;결과&quot;&gt;결과&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h4_1.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이것으로 구글 스프레드 시트와의 연동이 끝났습니다. 파이어베이스보다 훨씬 깔끔하고 제출용으로 전혀 문제 없을 것 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/HwanGonJang/Camp51.9_KioskProject&quot;&gt;깃허브&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>HwanGonJang</name>
        
        
      </author>

      

      
        <category term="web" />
      

      
        <summary type="html">Camp51.9 Kiosk Project (4)Google Spread Sheet 연동</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Camp51.9 Kiosk Project (3)Google Firebase 연동</title>
      <link href="https://hwangonjang.github.io/KioskProject03" rel="alternate" type="text/html" title="Camp51.9 Kiosk Project (3)Google Firebase 연동" />
      <published>2021-02-04T01:40:00+09:00</published>
      <updated>2021-02-04T01:40:00+09:00</updated>
      <id>https://hwangonjang.github.io/KioskProject03</id>
      <content type="html" xml:base="https://hwangonjang.github.io/KioskProject03">&lt;h1 id=&quot;camp519-kiosk-project-3google-firebase-연동&quot;&gt;Camp51.9 Kiosk Project (3)Google Firebase 연동&lt;/h1&gt;

&lt;h2 id=&quot;camp519-kiosk-project&quot;&gt;Camp51.9 Kiosk Project&lt;/h2&gt;

&lt;p&gt;html, css, javascript를 처음 공부하는 동시에 영등포고등학교 메이커스페이스 Camp51.9의 시설 이용 키오스크를 직접 개발하는 프로젝트.&lt;/p&gt;

&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;

&lt;p&gt;앞선 글의 소스코드나 동작 과정을 보면 DB가 존재함을 알 수 있었습니다. 키오스크이고 로그인을 지원하기 때문에 회원가입한 사용자의 정보와 메이커스페이스의 시설 이용정보, 남은 여석, 유료 장비 사용 여부 등 여러가지 실시간으로 바뀌는 데이터들을 관리할 DB가 필요합니다. 하지만 그 크기가 크지 않고 가볍기 때문에 편하고 쉽게 사용할 수 있는 DB를 찾아보던중 구글의 FireBase를 알게 되었습니다. 
 이번 글은 html과 Fireabase를 연동한 과정을 작성하겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;개발-과정&quot;&gt;개발 과정&lt;/h2&gt;

&lt;p&gt;파이어베이스에 저장될 정보는 다음과 같습니다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;이용자의 회원가입 정보(이름, 이메일, 전화번호, 소속(학교이기 때문에 외부인과 구분이 필요합니다.))&lt;/li&gt;
  &lt;li&gt;로그인한 이용자의 정보&lt;/li&gt;
  &lt;li&gt;시설 및 로비의 남은 좌석 정보&lt;/li&gt;
  &lt;li&gt;유료 장비 사용 가능 여부에 관한 정보&lt;/li&gt;
  &lt;li&gt;기타&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이러한 정보들을 저장하기 위해 파이어베이스를 사용해보겠습니다.&lt;/p&gt;

&lt;h3 id=&quot;google-firebase&quot;&gt;Google Firebase&lt;/h3&gt;

&lt;p&gt;파이어베이스(Firebase)는 구글에서 제공하는 모바일, 웹 어플리케이션 개발 플랫폼이자 실시간 데이터베이스입니다. 말그대로 실시간 데이터베이스이기 때문에 사용자가 정보를 입력할 때 마다 실시간으로 데이터베이스의 값이 바뀝니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Firebase 웹 어플리케이션 프로젝트 생성 및 연동 스크립트 가져오기&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;파이어베이스에서 웹 어플리케이션 용도로 프로젝트를 생성합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h3_1.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;p&gt;프로젝트 설정 메뉴에서 html과 연동을 위한 firebase 스크립트를 찾을 수 있습니다. 그대로 가져오고 이때 analytics 부분은 사용하지 않으므로 지워줍니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// Your web app's Firebase configuration&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// For Firebase JS SDK v7.20.0 and later, measurementId is optional&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firebaseConfig&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;apiKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AIzaSyC5_G3RZhRjxLyh27dgrTNXX2ul1uMF9OI&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;authDomain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test-90278.firebaseapp.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;projectId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test-90278&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;storageBucket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;test-90278.appspot.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;messagingSenderId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;315329074324&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1:315329074324:web:3bfb0adda43868a8975081&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;measurementId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;G-96ZE5HQBEJ&quot;&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// Initialize Firebase&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initializeApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firebaseConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;스크립트에는 연결을 위한 Apikey, 도메인, 프로젝트 ID등 고유 값들이 자동으로 작성되어있습니다. html의 &amp;lt;body&amp;gt; 태그 및에 붙여넣기 해주기만 하면 끝입니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;파이어베이스에 값 넣기 : set 명령과 push 명령 이해하기&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;먼저 파이어베이스 입력에 사용되는 명령에는 set과 push가 있습니다. 둘의 특징은 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;set : 특정 위치에 입력값을 작성하나 다른 값을 가진 같은 요청을 받으면 기존의 값을 없애고 다시 입력합니다.&lt;/li&gt;
  &lt;li&gt;push : 기본적으로 set과 같은 명령이나 기존의 값을 초기화하지 않습니다. 하지만 매 처음 입력마다 랜덤의 고유 key값을 경로에 집어넣습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;제가 만들고 있는 키오스크는 많은 사용자들이 로그인하고 이용정보를 저장하기 때문에 push를 사용하는 것이 좋아보이지만 저는 set을 사용했습니다. 처음 개발할때는 push를 사용했으나 같은 위치에 계속해서 정보를 저장하는 대신 랜덤의 key값을 집어 넣기 때문에 나중에 값을 가져올때, 즉 출력 시에 경로를 지정할 수 없는 문제가 생겼습니다.&lt;/p&gt;

&lt;p&gt;그래서 저는 입력에서 set 명령을 사용했고 한 위치에 하나의 값만 저장하는 단점을 보완하기 위해 key값에 제가 참조하기 쉽도록 숫자를 더하여 간단한 규칙을 지정했습니다(ex. 아이디1 키는 아이디를, 아이디2 키는 이름을 저장하는 방식입니다. 이렇게 하면 조금 복잡해지지만 set에서 서로 다른 위치에 다른 값을 하나씩 저장할 수 있습니다.).  이용 정보와 사용하는 시설, 장비, 여석 등 또한 비슷하게 저장하였습니다.&lt;/p&gt;

&lt;p&gt;파이어베이스 입력을 위한 명령은 다음과 같습니다.&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbRefObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Login/'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;변수를 하나 선언하고 파이어베이스에 저장할 경로와 이름, 값을 지정해주기만 하면 됩니다. 위의 경우 회원가입 페이지의 한 부분으로 userid 변수는 사용자가 입력한 아이디이고 그 입력한 아이디를 파이어베이스에 저장하는 코드입니다. 같은 방식으로 이름, 소속 등을 입력해줍니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;파이어베이스의 값 출력하기&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;앞서 말했듯이 push는 값을 저장하는 용도로는 깔끔하지만 랜덤의 key값을 지정하기 때문에 참조가 어렵습니다. 따라서 set을 사용하되 고유의 규칙을 가진 key 값을 지정해주었습니다. 회원가입에서 사용자가 정한 ID를 기준으로 숫자를 붙여 저장해 주었습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h3_2.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;p&gt;파이어베이스에 저장할 정보 중 현재 이용중인 이용자의 정보를 저장해야 한다고 먼저 정했습니다. 이 정보는 웹에서 로그인 한 후  ~님 의 형식으로 출력되는 부분입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h1_5.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그래서 저는 파이어베이스에 따로 tmp라는 공간을 만들어 현재 사용하고 있는 이용자의 ‘ID’를 저장해주었습니다. 이렇게 하면 현재 사용자의 ID를 가져와 위의 입력 규칙에 맞게 숫자를 더하는 방식으로 원하는 정보를 참조할 수 있습니다. 아래는 이러한 방식으로 작성한 출력 코드입니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbTestRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Login/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;dbTestRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'child_added'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;warning&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;확인완료&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
        &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;write&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; 님으로&amp;lt;br&amp;gt;이용하시겠습니까?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 코드는 로그인 html의 한 부분입니다. 입력처럼 변수를 생성하고 참조할 경로를 지정해주면 data.val() 이라는 변수로 파이어베이스의 값을 가져오게됩니다. 아래는 이용자의 ID로 이용자의 이름을 가져오는 코드입니다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//tmp의 이용자 ID 가져오기&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbTestRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tmp/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;dbTestRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'child_added'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//파이어베이스에 이용날짜 저장&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentDay&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CurrentUser/CurrentDay'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;currentDay&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//파이어베이스에 이용시간 저장&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CurrentUser/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Time'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;currentTime&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hours&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;':'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;minutes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//파이어베이스의 이용자 이름으로 출입시간 및 이용시설정보 저장&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentuser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CurrentUser/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'TimeLobby'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;LobbyTime&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lobbytimeH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;시간&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lobbytimeM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;분&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//로비 이용자가 이용 시 로비 여석 -1&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbTestRef1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Establishment/Lobby/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;dbTestRef1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'child_added'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;LobbyUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Establishment/Lobby'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Lobby&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; 
	&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음과 같은 방식으로 tmp의 이용중인 이용자의 ID를 가져오고 다시 사용하여 사용자 별로 출입시간을 저장합니다.&lt;/p&gt;

&lt;h2 id=&quot;결과&quot;&gt;결과&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h3_3.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 방법으로 저는 파이어베이스를 연동하고 입력과 출력을 동시에 해결했습니다. 키오스크 용 웹 어플리케이션에 반드시 필요한 상호작용 데이터베이스인 파이어베이스를  처음 사용해봤지만 하나하나 공부하며 직접 만드는 과정이 매우 의미있었던 것 같습니다. 실제로 메이커스페이스에서 유용하게 활용하고 있습니다.&lt;/p&gt;

&lt;p&gt;다음 글에서는 Google Spread Sheet를 연동하는 과정을 다루겠습니다. 감사합니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/HwanGonJang/Camp51.9_KioskProject&quot;&gt;깃허브&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>HwanGonJang</name>
        
        
      </author>

      

      
        <category term="web" />
      

      
        <summary type="html">Camp51.9 Kiosk Project (3)Google Firebase 연동</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Camp51.9 Kiosk Project (2)체온 입력칸 추가</title>
      <link href="https://hwangonjang.github.io/KioskProject02" rel="alternate" type="text/html" title="Camp51.9 Kiosk Project (2)체온 입력칸 추가" />
      <published>2021-02-02T01:40:00+09:00</published>
      <updated>2021-02-02T01:40:00+09:00</updated>
      <id>https://hwangonjang.github.io/KioskProject02</id>
      <content type="html" xml:base="https://hwangonjang.github.io/KioskProject02">&lt;h1 id=&quot;camp519_kioskproject-2체온-입력칸-추가&quot;&gt;Camp51.9_KioskProject (2)체온 입력칸 추가&lt;/h1&gt;

&lt;p&gt;html, css, javascript를 처음 공부하는 동시에 영등포고등학교 메이커스페이스 Camp51.9의 시설 이용 키오스크를 직접 개발하는 프로젝트.&lt;/p&gt;

&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;
&lt;p&gt;저번 글에서 메이커 스페이스를 위한 출입 웹 어플리케이션을 설계하고 구축하는 작업을 했습니다. 초기의  화면과 기능 구성은 처음 웹 개발을 공부하는 것이기 때문에 약 2개월 동안 가장 기본적인 틀을 잡았습니다. 어쩌면 힘들었을 수도 있지만 이 정도를 혼자서 독학하며 개발하다 보니 html에 대한 자신감이 생긴 것 같습니다. 이렇게 기본적인 틀을 잡아 주었으니 이제 살을 더할 차례입니다. 
 처음 개발목표에 체온 입력칸을 추가할것이라고 했습니다. 하지만 단순히 체온을 매니저가 측정해주고 직접 입력하는 것이 아닌 이용자가 자동으로 쉽게 측정할 수 있도록 아두이노와 파이썬을 활용하여 마스크 감지 인공지능 체온 측정 시스템을 구축하도록 할 것입니다.&lt;/p&gt;

&lt;h2 id=&quot;개발-과정&quot;&gt;개발 과정&lt;/h2&gt;
&lt;p&gt;목표하고 있는 과정은 이렇습니다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;이용자는 마스크를 착용한 채로 카메라 앞에 선다.&lt;/li&gt;
  &lt;li&gt;인공지능이 대상의 마스크 착용여부를 3초간 확인하고 체온측정을 진행한다.&lt;/li&gt;
  &lt;li&gt;단, 마스크를 착용하고 있지 않으면 체온측정을 진행하지 않고 초기화면으로 돌아간다.&lt;/li&gt;
  &lt;li&gt;체온측정을 마치면 자동으로 체온입력칸에 체온 정보가 입력된다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;기술&quot;&gt;기술&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Python
    &lt;ul&gt;
      &lt;li&gt;마스크 감지 인공지능을 구축하고 아두이노로 부터 받은 체온 측정 값을 웹에 전달합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Arduino
    &lt;ul&gt;
      &lt;li&gt;적외선 체온 센서를 활용하여 체온을 측정하고 파이썬 코드로 값을 전송합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;javascript
    &lt;ul&gt;
      &lt;li&gt;파이썬 코드에서 전달 받은 체온 값을 웹에 출력해줍니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;로그인-화면-수정&quot;&gt;로그인 화면 수정&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;기존 로그인 화면에서 체온 입력칸을 추가한 화면입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h2_1.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;마스크-감지-인공지능-구축&quot;&gt;마스크 감지 인공지능 구축&lt;/h3&gt;
&lt;p&gt;인공지능은 https://github.com/balajisrinivas/Face-Mask-Detection 이 분이 올려주신 코드와 데이터셋을 활용했습니다. 이 리포지토리를 다운 받아서 데이터셋을 학습시켜주면 .model 확장자의 결과가 나옵니다. 이 과정에서는 아나콘다3를 활용했습니다. 이 파일을 가지고 저는 다음과 같이 구축했습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h2_3.jpg?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;라이브러리&quot;&gt;라이브러리&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;tensorflow&amp;gt;=1.15.2&lt;/li&gt;
  &lt;li&gt;keras==2.3.1&lt;/li&gt;
  &lt;li&gt;imutils==0.5.3&lt;/li&gt;
  &lt;li&gt;numpy==1.18.2&lt;/li&gt;
  &lt;li&gt;opencv-python==4.2.0.&lt;/li&gt;
  &lt;li&gt;matplotlib==3.2.1&lt;/li&gt;
  &lt;li&gt;scipy==1.4.1&lt;/li&gt;
  &lt;li&gt;selenium&lt;/li&gt;
  &lt;li&gt;firebase&lt;/li&gt;
  &lt;li&gt;serial	(for Arduino)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;코드&quot;&gt;코드&lt;/h3&gt;

&lt;h4 id=&quot;아두이노&quot;&gt;아두이노&lt;/h4&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;체온센서의 값을 읽어서 시리얼 통신으로 보내는 간단한 코드입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h2_4.jpg?raw=true&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h2_5.jpg?raw=true&quot; /&gt;&lt;/p&gt;

&lt;p&gt;모두 납떔하고 레이저커터로 잘라 모양을 만들어주었습니다.&lt;/p&gt;

&lt;h4 id=&quot;아두이노-연동python&quot;&gt;아두이노 연동(Python)&lt;/h4&gt;
&lt;p&gt;serial 라이브러리를 사용해 다음과 같이 아두이노 보드와 연동합니다.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'COM6'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  	&lt;span class=&quot;n&quot;&gt;baudrate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;웹-연동python&quot;&gt;웹 연동(Python)&lt;/h4&gt;

&lt;p&gt;selenium 라이브러리를 사용해 웹과 연동합니다. 파이썬에서 웹에 정보를 전달해야하기 때문에 파이썬에서 웹을 통제합니다.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Chrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;executable_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'chromedriver'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;file:///C:/CampKioskSystem/htmlProject/loginCamp.html&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;selenium 라이브러리로 웹을 동작하기 위해서 사용하는 브라우저인 크롬의 chromedriver를 다운로드 받아 같은 위치에 저장해야 합니다.&lt;/p&gt;

&lt;h4 id=&quot;코드-수정부&quot;&gt;코드 수정부&lt;/h4&gt;
&lt;p&gt;깃허브의 오픈 소스로 공개된 마스크 감지 인공지능 코드를 가져와서 구축하기 때문에 제 목적에 맞게 수정이 필요합니다. 인공지능이 동작하는 while문 안에 아두이노와 웹을 다루는 코드를 추가하여 수정해주었습니다.&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;withoutMask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
			&lt;span class=&quot;c&quot;&gt;#마스크착용 확률이 99% 초과라면&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;withoutMask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;	
				&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
				&lt;span class=&quot;c&quot;&gt;#cnt가 20이 되면(3초)&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
                    	&lt;span class=&quot;c&quot;&gt;#아두이노에서 시리얼 통신으로 받은 체온값&lt;/span&gt;
						&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
						&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;		
						&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
						&lt;span class=&quot;c&quot;&gt;#파이어베이스 동작부&lt;/span&gt;
						&lt;span class=&quot;nb&quot;&gt;dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reference&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Temperature/tempTmp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
						&lt;span class=&quot;nb&quot;&gt;dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'null'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
						&lt;span class=&quot;c&quot;&gt;#체온값 로드를 위해 새로고침&lt;/span&gt;
						&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;refresh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
						&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
				
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;withoutMask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;mask는 인공지능이 계산한 마스크를 착용하고 있는 확률입니다. 쓰고있다면 99.99%로 인식하기 떄문에 99%를 기준으로 잡습니다. 만약 99% 이하라면 시간을 나타내는 cnt를 0으로 초기화하고 인공지능이 다시 확인을 시작합니다.
 마스크를 착용하고 3초가 지나면 파이썬에서 아두이노의 시리얼 통신을 받을 준비를 합니다. 여기서 손목으로 체온을 측정하면 아두이노가 측정 값을 시리얼로 보내고 파이썬이 자동으로 받아 res 변수에 다코딩하여 저장합니다. 그리고 저장된 값은 파이어베이스에 똑같이 저장되고 이를 웹이 가져와 출력하는 방식입니다. 이를 위해 웹을 새로고침 해줍니다.&lt;/p&gt;

&lt;h2 id=&quot;결과&quot;&gt;결과&lt;/h2&gt;
&lt;p&gt;이것으로 마스크 감지 인공지능을 더한 자동 체온입력 시스템을 구축하였습니다. html을 이해하고 기존에 사용하던 기술(파이썬, 아두이노)들을 엮어서 개발하여 더 멋진 결과가 나온 것 같습니다. 다음으로는 구글의 파이어베이스와 스프레드 시트를 연동한 과정을 작성하겠습니다.&lt;/p&gt;

&lt;p&gt;링크는 시연영상입니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://youtu.be/Jl-NsQvFlGY&quot;&gt;영상&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/HwanGonJang/Camp51.9_KioskProject&quot;&gt;깃허브&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>HwanGonJang</name>
        
        
      </author>

      

      
        <category term="web" />
      

      
        <summary type="html">Camp51.9_KioskProject (2)체온 입력칸 추가</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Camp51.9 Kiosk Project (1)시작 그리고 Web Application 웹 앱</title>
      <link href="https://hwangonjang.github.io/KioskProject-start" rel="alternate" type="text/html" title="Camp51.9 Kiosk Project (1)시작 그리고 Web Application 웹 앱" />
      <published>2021-02-01T01:40:00+09:00</published>
      <updated>2021-02-01T01:40:00+09:00</updated>
      <id>https://hwangonjang.github.io/KioskProject-start</id>
      <content type="html" xml:base="https://hwangonjang.github.io/KioskProject-start">&lt;h1 id=&quot;camp519_kioskproject&quot;&gt;Camp51.9_KioskProject&lt;/h1&gt;

&lt;p&gt;html, css, javascript를 처음 공부하는 동시에 메이커스페이스 Camp51.9의 시설 이용 키오스크를 직접 개발하는 프로젝트.&lt;/p&gt;

&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;

&lt;p&gt;html, 웹 공부를 시작하기로 했습니다. 프론트엔드 개발이나 디자인 분야를 지망하는 것은 아니지만 IT, 인터넷 환경에서 가장 기본이 되는 부분이기에 적어도 숙지는 하고 있어야 한다고 생각했습니다. 물론 지루하게 책만 보면서 공부할 생각은 아닙니다. 5년간 프로그래밍 공부와 개발을 이어오면서 1000자의 코드를 보는 것보다 10자의 코드를 써보는 것이 더 큰 도움이 된다는 것을 배웠기 때문입니다.&lt;/p&gt;

&lt;p&gt;제가 일하고 있는 메이커 스페이스 Camp51.9에는 시설 이용을 위한 출입등록 목적의 이름, 소속 입력 웹이 있습니다. 그러나 코로나 바이러스 확산으로 인한 이용객의 정보 및 체온 확인이 크게 중요해졌기 때문에 기존 웹의 보완의 필요성을 느꼈습니다. 따라서 단순히 html 예제를 공부하는 것이 아닌 메이커스페이스의 시설 이용을 위한 키오스크를 직접 개발해보기로 했습니다. 이를 위해 웹 사이트 개발이 아닌 사용자와 동적인 상호작용을 할 수 있는 웹 애플리케이션 개발을 목표로 할 것 입니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h5 id=&quot;공부와-개발을-동시에&quot;&gt;공부와 개발을 동시에!&lt;/h5&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;시작&quot;&gt;시작&lt;/h2&gt;

&lt;p&gt;매니저의 입장에서 본 저희 메이커스페이스의 이용 순서는 이렇습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;체온 측정을 안내해주고 측정을 해드린 후 수기 작성을 받습니다.&lt;/li&gt;
  &lt;li&gt;이를 확인한 후 위에서 이야기한 기존의 웹 시스템에 이름과 소속을 입력할 수 있도록 안내합니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;체온 측정과 수기 작성, 웹이 모두 나뉘어져 있어서 불편한점이 많고 제가 가끔 입장하시는 분들을 확인하지 못하는 때에는 위의 모든것을 작성하지 못할 때도 많습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;따라서 프로젝트에 조금 더 추가하기로 했습니다. 큰 건물에서 자주 보이는 얼굴인식 체온측정 기기처럼 이용객들이 편리하도록 자동화 하는 것입니다. 얼굴 인식에서 더하여 마스크 감지 인공지능을 추가하여 조금 손을 보아 아두이노로 체온 측정기를 만들어 연동하면 여러 건물에서 흔히 볼 수 있는 체온 측정기를 사용료 없이 멋지게 만들 수 있을 것 같습니다. 후에 html과 연동을 목표로 하겠습니다.&lt;/p&gt;

&lt;p&gt;전체적인 틀을 잡았으니 이제 세부적인 요소와 툴들을 정하도록 하겠습니다. 처음 시작할때는 관련지식이 전무한 상황이여서 구글 검색과 선생님께 여쭈어 필요한 툴들을 정리했습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HTML, CSS, JavaScript
    &lt;ul&gt;
      &lt;li&gt;기본적인 웹 앱 개발 툴&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Firebase&lt;/li&gt;
  &lt;li&gt;Google에서 제공하는 실시간 데이터베이스 서비스를  자바스크립트와 연동하여 출입시간과 사용자 이용정보를 DB로서 저장할 것입니다.&lt;/li&gt;
  &lt;li&gt;Google Sheet
    &lt;ul&gt;
      &lt;li&gt;Google 스프레드시트를 자바스크립트와 연동하여 활용하여 결재에 사용할 수 있도록 사용자 정보와 출입시간을 깔끔하게 정리할 것입니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Arduino
    &lt;ul&gt;
      &lt;li&gt;적외선 체온 센서를 활용하여 사용자들이 쉽게 체온을 측정할 수 있도록 자동화 할 것입니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Python
    &lt;ul&gt;
      &lt;li&gt;tensorflow를 활용하여 마스크 감지 인공지능을 함께 설치해 줄 것입니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;웹-애플리케이션&quot;&gt;웹 애플리케이션?&lt;/h2&gt;

&lt;p&gt;웹 애플리케이션(web application) 또는 웹 앱은 소프트웨어 공학적 관점에서 인터넷이나 인트라넷을 통해 웹 브라우저에서 이용할 수 있는 응용 소프트웨어를 말한다.&lt;/p&gt;

&lt;p&gt;웹 애플리케이션은 사용자가 별도의 응용 소프트웨어를 설치하지 않아도 웹 브라우저를 통해 기능을 이용할 수 있도록 만든 웹 서비스입니다. 웹 애플리케이션은 클라이언트로서 사용될 수 있어 사용량이 늘고있고 유지관리가 용이하다는 장점이 있습니다. 웹 어플리케이션은 단순히 웹의 기능만이 아니라 웹 메일, 온라인 전자상거래, 커뮤니티, 블로그, 게임 등 여러가지 용도로 사용 될 수 있습니다.&lt;/p&gt;

&lt;p&gt;기본적으로 무인 키오스크를 바탕으로 개발할 것이기 때문에 정적 웹사이트는 맞지 않습니다. 따라서 사용자와 상호작용이 가능한 웹 애플리케이션을 개발할 것입니다.&lt;/p&gt;

&lt;h2 id=&quot;기능&quot;&gt;기능&lt;/h2&gt;

&lt;p&gt;이번 개발의 목적인 html 부분입니다. 우선 어떤 식으로 개발할지 설계했습니다. Camp51.9에서 필요한 기능은 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;로그인 화면(default)&lt;/li&gt;
  &lt;li&gt;회원가입 화면&lt;/li&gt;
  &lt;li&gt;이용 종류 선택 화면&lt;/li&gt;
  &lt;li&gt;이용 시설 화면&lt;/li&gt;
  &lt;li&gt;이용 장비 화면(외부인 이용 페이지)&lt;/li&gt;
  &lt;li&gt;이용 행사 화면&lt;/li&gt;
  &lt;li&gt;기타 이용사유 화면&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;로그인 창을 기준으로 서로 연결되도록 개발할 것입니다.&lt;/p&gt;

&lt;h4 id=&quot;로그인-화면&quot;&gt;로그인 화면&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;로그인 화면입니다. 로그인, 퇴장, 회원가입으로 이어지는 기본 화면으로 꾸몄습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h1_1.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;로그인 페이지에서 아이디를 입력하고 Login 버튼을 누르면 확인 팝업이 실행되고 시설 종류 선택 화면으로 이어집니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h1_2.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;회원가입-화면&quot;&gt;회원가입 화면&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;회원 가입 페이지입니다. 처음 이용하는 고객은 회원가입을 한 후에 이용가능합니다.
    &lt;ul&gt;
      &lt;li&gt;고객 정보는 자동으로 파이어베이스에 저장되어 입출력이 가능합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h1_3.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;이용-종류-선택-화면&quot;&gt;이용 종류 선택 화면&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;이용 종류 선택 화면입니다. 사용 사유에 맞게 선택합니다.
    &lt;ul&gt;
      &lt;li&gt;로그인 정보에 따라 현재 사용중인 유저의 이름이 출력됩니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h1_4.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;시설-이용-화면&quot;&gt;시설 이용 화면&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;시설 이용 화면입니다. 원하는 시설을 선택하고 이용하기 버튼을 누릅니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h1_5.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;p&gt;잔여 좌석은 파이어베이스에서 자동으로 연산되어 출력됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h1_6.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;잔여 좌석이 없을 경우 이용 불가합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h1_7.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;외부인-이용-화면&quot;&gt;외부인 이용 화면&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;외부인 이용 페이지에서는 유료 장비를 사용할 수 있습니다. (영등포고 학생은 무료여서 따로 배치했습니다.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h1_8.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;행사-화면&quot;&gt;행사 화면&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;행사 페이지입니다. 현재 코로나 바이러스로 진행중인 행사가 없어 경고 팝업이 생성됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h1_9.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;기타-화면&quot;&gt;기타 화면&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;기타 다른 사유가 있을 때는 기타 사용 팝업이 올라옵니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/HwanGonJang/HwanGonJang.github.io/blob/master/Pictures/h1_10.png?raw=true&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이렇게 기본적인 html의 화면 틀은 잡혔습니다. 로그인 기능과 팝업 등 html을 처음부터 시작해서 이 화면들을 구성하는데에 정말 오래걸렸지만 만족스러운 결과가 나온것 같습니다. 모든 데이터는 파이어베이스에 저장되고 출입기록이 스프레드 시트에 자동으로 쓰여지도록 구현할 것입니다. html 소스코드는 제 github에서 확인하실 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/HwanGonJang/Camp51.9_KioskProject&quot;&gt;깃허브&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>HwanGonJang</name>
        
        
      </author>

      

      
        <category term="web" />
      

      
        <summary type="html">Camp51.9_KioskProject</summary>
      

      
      
    </entry>
  
</feed>
